'use strict';Object.defineProperty(exports,'__esModule',{value:!0});var _subscriber=require('./subscriber'),_subscriber2=_interopRequireDefault(_subscriber),_middleware=require('./middleware'),_middleware2=_interopRequireDefault(_middleware),_async=require('../utils/async');function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}const MATCH_ALL_KEY='$all',MATCH_CLOSE_KEY='$closed';function resolvePipelineState(a){return a?a.reduce((a,b)=>b?'function'==typeof b?Object.assign(a,b(a)):Object.assign(a,b):a,{}):void 0}class PubChan{constructor(a){this.closed=!1,this.listeners=new Map,this.fnlisteners=new Map,this.subscribers=new Set,this.middleware=a&&(a.find||a.prepare)?new _middleware2.default(this,a.find,a.prepare):new _middleware2.default(this)}get length(){return this.listeners.size+this.fnlisteners.size}get size(){return this.listeners.size+this.fnlisteners.size}sizeof(...a){let b=0;return 0===a.length?this.listeners.forEach((a)=>{b+=a.size}):a.forEach((a)=>{const c=this.listeners.get(a);c&&(b+=c.size)}),b}setMiddleware(a,b){this.middleware=new _middleware2.default(this,a,b)}emit(...a){if(this.closed)throw new Error('[pubchan]: Tried to emit to a closed pubchan');if(this.pipeline={with:[],ids:new Set,matches:new Set},this.listeners.size){this.middleware.match(a);const b=this.listeners.get(MATCH_ALL_KEY);b&&b.forEach((a)=>this.pipeline.matches.add(a))}return this}emitAsync(a,...b){return'string'==typeof a&&(a=[a]),(0,_async.asynchronously)(()=>this.emit(...a).send(...b))}with(...a){return a.length&&this.pipeline&&0<this.pipeline.matches.size&&(this.pipeline.with=[...this.pipeline.with,...a]),this}state(...a){return this.pipeline&&a.length&&(this.pipeline.state=a.reduce((a,b)=>a.concat(b||[]),this.pipeline.state||[])),this}async send(...a){if(this.closed)throw new Error('[pubchan]: Tried to send to a closed pubchan');else if(!this.pipeline.matches.size)return this.pipeline.state?{results:null,state:resolvePipelineState(this.pipeline.state)}:{results:null};const b={ids:this.pipeline.ids,with:this.pipeline.with,matches:this.pipeline.matches,state:this.pipeline.state&&resolvePipelineState(this.pipeline.state)};a.length&&(b.with=b.with.concat(a));const c=[];b.matches.forEach((a)=>c.push(...a.trigger(b)));const d=await Promise.all(c);return b.state?{results:d,state:b.state}:{results:d}}subscribe(a={}){if(this.closed)throw new Error('[pubchan]: Tried to subscribe to a closed pubchan');const b=new _subscriber2.default(this,a);return this.subscribers.add(b),b}async close(...a){if(!this.size)return null;let b;return this.listeners.has(MATCH_CLOSE_KEY)&&(b=await this.emit(MATCH_CLOSE_KEY).with(a).send()),this.closed=!0,this.subscribers.forEach((a)=>a.cancel()),b}}exports.default=PubChan;